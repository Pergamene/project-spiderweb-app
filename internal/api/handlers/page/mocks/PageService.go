// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import page "github.com/Pergamene/project-spiderweb-service/internal/models/page"

import pageservice "github.com/Pergamene/project-spiderweb-service/internal/services/page"

// PageService is an autogenerated mock type for the PageService type
type PageService struct {
	mock.Mock
}

// CreatePage provides a mock function with given fields: ctx, params
func (_m *PageService) CreatePage(ctx context.Context, params pageservice.CreatePageParams) (page.Page, error) {
	ret := _m.Called(ctx, params)

	var r0 page.Page
	if rf, ok := ret.Get(0).(func(context.Context, pageservice.CreatePageParams) page.Page); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Get(0).(page.Page)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, pageservice.CreatePageParams) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdatePage provides a mock function with given fields: ctx, params
func (_m *PageService) UpdatePage(ctx context.Context, params pageservice.UpdatePageParams) error {
	ret := _m.Called(ctx, params)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, pageservice.UpdatePageParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
